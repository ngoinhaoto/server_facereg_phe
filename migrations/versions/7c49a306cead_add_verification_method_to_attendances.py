"""Add verification_method to attendances

Revision ID: 7c49a306cead
Revises: b04a02947f80
Create Date: 2025-07-03 19:52:06.735479

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7c49a306cead'
down_revision: Union[str, None] = 'b04a02947f80'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_auth_logs_device_id', table_name='auth_logs')
    op.drop_index('ix_auth_logs_id', table_name='auth_logs')
    op.drop_table('auth_logs')
    op.add_column('attendances', sa.Column('verification_method', sa.String(), nullable=True))
    op.add_column('face_embeddings', sa.Column('embedding', sa.LargeBinary(), nullable=False))
    op.add_column('face_embeddings', sa.Column('embedding_type', sa.String(), nullable=True))
    op.add_column('face_embeddings', sa.Column('embedding_size', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_face_embeddings_embedding_type'), 'face_embeddings', ['embedding_type'], unique=False)
    op.drop_column('face_embeddings', 'encrypted_embedding')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('face_embeddings', sa.Column('encrypted_embedding', postgresql.BYTEA(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_face_embeddings_embedding_type'), table_name='face_embeddings')
    op.drop_column('face_embeddings', 'embedding_size')
    op.drop_column('face_embeddings', 'embedding_type')
    op.drop_column('face_embeddings', 'embedding')
    op.drop_column('attendances', 'verification_method')
    op.create_table('auth_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('device_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('success', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='auth_logs_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='auth_logs_pkey')
    )
    op.create_index('ix_auth_logs_id', 'auth_logs', ['id'], unique=False)
    op.create_index('ix_auth_logs_device_id', 'auth_logs', ['device_id'], unique=False)
    # ### end Alembic commands ###
